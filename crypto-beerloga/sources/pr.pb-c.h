/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pr.proto */

#ifndef PROTOBUF_C_pr_2eproto__INCLUDED
#define PROTOBUF_C_pr_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Command Command;
typedef struct RegisterResponse RegisterResponse;
typedef struct RegisterRequest RegisterRequest;
typedef struct LoginChallengeMsg1Request LoginChallengeMsg1Request;
typedef struct LoginChallengeMsg1Response LoginChallengeMsg1Response;
typedef struct LoginChallengeMsg2Request LoginChallengeMsg2Request;
typedef struct LoginChallengeMsg2Response LoginChallengeMsg2Response;
typedef struct ListCommentsRequest ListCommentsRequest;
typedef struct Comment Comment;
typedef struct ListCommentsResponse ListCommentsResponse;
typedef struct GetUserDetailsRequest GetUserDetailsRequest;
typedef struct GetUserDetailsResponse GetUserDetailsResponse;
typedef struct AddBeerRequest AddBeerRequest;
typedef struct AddBeerResponse AddBeerResponse;
typedef struct ListBeersRequest ListBeersRequest;
typedef struct Beer Beer;
typedef struct ListBeersResponse ListBeersResponse;
typedef struct AddCommentRequest AddCommentRequest;
typedef struct AddCommentResponse AddCommentResponse;
typedef struct DeleteCommentRequest DeleteCommentRequest;
typedef struct DeleteCommentResponse DeleteCommentResponse;
typedef struct Error Error;


/* --- enums --- */


/* --- messages --- */

struct  Command
{
  ProtobufCMessage base;
  uint32_t commandid;
  uint32_t commandtype;
  ProtobufCBinaryData commandvalue;
};
#define COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&command__descriptor) \
    , 0, 0, {0,NULL} }


struct  RegisterResponse
{
  ProtobufCMessage base;
  char *nickname;
  char *group_n;
  char *gamma;
  char *q;
  char *a;
  char *alpha;
};
#define REGISTER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&register_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  RegisterRequest
{
  ProtobufCMessage base;
  char *nickname;
};
#define REGISTER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&register_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  LoginChallengeMsg1Request
{
  ProtobufCMessage base;
  char *nickname;
  char *sigma;
};
#define LOGIN_CHALLENGE_MSG1_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_challenge_msg1_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  LoginChallengeMsg1Response
{
  ProtobufCMessage base;
  char *e;
};
#define LOGIN_CHALLENGE_MSG1_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_challenge_msg1_response__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  LoginChallengeMsg2Request
{
  ProtobufCMessage base;
  char *s;
  char *lambda;
};
#define LOGIN_CHALLENGE_MSG2_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_challenge_msg2_request__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  LoginChallengeMsg2Response
{
  ProtobufCMessage base;
  char *nickname;
};
#define LOGIN_CHALLENGE_MSG2_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&login_challenge_msg2_response__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  ListCommentsRequest
{
  ProtobufCMessage base;
  uint32_t beer_id;
  uint32_t page;
};
#define LIST_COMMENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&list_comments_request__descriptor) \
    , 0, 0 }


struct  Comment
{
  ProtobufCMessage base;
  uint32_t comment_id;
  char *comment_value;
  char *comment_author;
  uint32_t beer_id;
  char *s;
  char *sigma;
  char *lambda;
  char *is_private;
};
#define COMMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&comment__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  ListCommentsResponse
{
  ProtobufCMessage base;
  uint32_t pages_count;
  uint32_t current_page;
  size_t n_comments;
  Comment **comments;
};
#define LIST_COMMENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&list_comments_response__descriptor) \
    , 0, 0, 0,NULL }


struct  GetUserDetailsRequest
{
  ProtobufCMessage base;
  char *nickname;
  uint32_t page;
};
#define GET_USER_DETAILS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_user_details_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  GetUserDetailsResponse
{
  ProtobufCMessage base;
  char *nickname;
  char *group_n;
  char *gamma;
  char *q;
  char *alpha;
  uint32_t pages_count;
  uint32_t current_page;
  size_t n_comments;
  Comment **comments;
};
#define GET_USER_DETAILS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&get_user_details_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0,NULL }


struct  AddBeerRequest
{
  ProtobufCMessage base;
  char *beer_name;
};
#define ADD_BEER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_beer_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  AddBeerResponse
{
  ProtobufCMessage base;
  uint32_t beer_id;
};
#define ADD_BEER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_beer_response__descriptor) \
    , 0 }


struct  ListBeersRequest
{
  ProtobufCMessage base;
  uint32_t page_number;
};
#define LIST_BEERS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&list_beers_request__descriptor) \
    , 0 }


struct  Beer
{
  ProtobufCMessage base;
  uint32_t beer_id;
  char *beer_name;
  char *beer_creator;
};
#define BEER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&beer__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  ListBeersResponse
{
  ProtobufCMessage base;
  uint32_t number_pages;
  uint32_t page_number;
  size_t n_beers;
  Beer **beers;
};
#define LIST_BEERS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&list_beers_response__descriptor) \
    , 0, 0, 0,NULL }


struct  AddCommentRequest
{
  ProtobufCMessage base;
  uint32_t beer_id;
  char *comment;
  char *private_key;
  protobuf_c_boolean is_private;
};
#define ADD_COMMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_comment_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  AddCommentResponse
{
  ProtobufCMessage base;
  uint32_t comment_id;
};
#define ADD_COMMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_comment_response__descriptor) \
    , 0 }


struct  DeleteCommentRequest
{
  ProtobufCMessage base;
  uint32_t comment_id;
};
#define DELETE_COMMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_comment_request__descriptor) \
    , 0 }


struct  DeleteCommentResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean success;
};
#define DELETE_COMMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&delete_comment_response__descriptor) \
    , 0 }


struct  Error
{
  ProtobufCMessage base;
  char *error_message;
};
#define ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&error__descriptor) \
    , (char *)protobuf_c_empty_string }


/* Command methods */
void   command__init
                     (Command         *message);
size_t command__get_packed_size
                     (const Command   *message);
size_t command__pack
                     (const Command   *message,
                      uint8_t             *out);
size_t command__pack_to_buffer
                     (const Command   *message,
                      ProtobufCBuffer     *buffer);
Command *
       command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   command__free_unpacked
                     (Command *message,
                      ProtobufCAllocator *allocator);
/* RegisterResponse methods */
void   register_response__init
                     (RegisterResponse         *message);
size_t register_response__get_packed_size
                     (const RegisterResponse   *message);
size_t register_response__pack
                     (const RegisterResponse   *message,
                      uint8_t             *out);
size_t register_response__pack_to_buffer
                     (const RegisterResponse   *message,
                      ProtobufCBuffer     *buffer);
RegisterResponse *
       register_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   register_response__free_unpacked
                     (RegisterResponse *message,
                      ProtobufCAllocator *allocator);
/* RegisterRequest methods */
void   register_request__init
                     (RegisterRequest         *message);
size_t register_request__get_packed_size
                     (const RegisterRequest   *message);
size_t register_request__pack
                     (const RegisterRequest   *message,
                      uint8_t             *out);
size_t register_request__pack_to_buffer
                     (const RegisterRequest   *message,
                      ProtobufCBuffer     *buffer);
RegisterRequest *
       register_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   register_request__free_unpacked
                     (RegisterRequest *message,
                      ProtobufCAllocator *allocator);
/* LoginChallengeMsg1Request methods */
void   login_challenge_msg1_request__init
                     (LoginChallengeMsg1Request         *message);
size_t login_challenge_msg1_request__get_packed_size
                     (const LoginChallengeMsg1Request   *message);
size_t login_challenge_msg1_request__pack
                     (const LoginChallengeMsg1Request   *message,
                      uint8_t             *out);
size_t login_challenge_msg1_request__pack_to_buffer
                     (const LoginChallengeMsg1Request   *message,
                      ProtobufCBuffer     *buffer);
LoginChallengeMsg1Request *
       login_challenge_msg1_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_challenge_msg1_request__free_unpacked
                     (LoginChallengeMsg1Request *message,
                      ProtobufCAllocator *allocator);
/* LoginChallengeMsg1Response methods */
void   login_challenge_msg1_response__init
                     (LoginChallengeMsg1Response         *message);
size_t login_challenge_msg1_response__get_packed_size
                     (const LoginChallengeMsg1Response   *message);
size_t login_challenge_msg1_response__pack
                     (const LoginChallengeMsg1Response   *message,
                      uint8_t             *out);
size_t login_challenge_msg1_response__pack_to_buffer
                     (const LoginChallengeMsg1Response   *message,
                      ProtobufCBuffer     *buffer);
LoginChallengeMsg1Response *
       login_challenge_msg1_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_challenge_msg1_response__free_unpacked
                     (LoginChallengeMsg1Response *message,
                      ProtobufCAllocator *allocator);
/* LoginChallengeMsg2Request methods */
void   login_challenge_msg2_request__init
                     (LoginChallengeMsg2Request         *message);
size_t login_challenge_msg2_request__get_packed_size
                     (const LoginChallengeMsg2Request   *message);
size_t login_challenge_msg2_request__pack
                     (const LoginChallengeMsg2Request   *message,
                      uint8_t             *out);
size_t login_challenge_msg2_request__pack_to_buffer
                     (const LoginChallengeMsg2Request   *message,
                      ProtobufCBuffer     *buffer);
LoginChallengeMsg2Request *
       login_challenge_msg2_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_challenge_msg2_request__free_unpacked
                     (LoginChallengeMsg2Request *message,
                      ProtobufCAllocator *allocator);
/* LoginChallengeMsg2Response methods */
void   login_challenge_msg2_response__init
                     (LoginChallengeMsg2Response         *message);
size_t login_challenge_msg2_response__get_packed_size
                     (const LoginChallengeMsg2Response   *message);
size_t login_challenge_msg2_response__pack
                     (const LoginChallengeMsg2Response   *message,
                      uint8_t             *out);
size_t login_challenge_msg2_response__pack_to_buffer
                     (const LoginChallengeMsg2Response   *message,
                      ProtobufCBuffer     *buffer);
LoginChallengeMsg2Response *
       login_challenge_msg2_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   login_challenge_msg2_response__free_unpacked
                     (LoginChallengeMsg2Response *message,
                      ProtobufCAllocator *allocator);
/* ListCommentsRequest methods */
void   list_comments_request__init
                     (ListCommentsRequest         *message);
size_t list_comments_request__get_packed_size
                     (const ListCommentsRequest   *message);
size_t list_comments_request__pack
                     (const ListCommentsRequest   *message,
                      uint8_t             *out);
size_t list_comments_request__pack_to_buffer
                     (const ListCommentsRequest   *message,
                      ProtobufCBuffer     *buffer);
ListCommentsRequest *
       list_comments_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   list_comments_request__free_unpacked
                     (ListCommentsRequest *message,
                      ProtobufCAllocator *allocator);
/* Comment methods */
void   comment__init
                     (Comment         *message);
size_t comment__get_packed_size
                     (const Comment   *message);
size_t comment__pack
                     (const Comment   *message,
                      uint8_t             *out);
size_t comment__pack_to_buffer
                     (const Comment   *message,
                      ProtobufCBuffer     *buffer);
Comment *
       comment__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   comment__free_unpacked
                     (Comment *message,
                      ProtobufCAllocator *allocator);
/* ListCommentsResponse methods */
void   list_comments_response__init
                     (ListCommentsResponse         *message);
size_t list_comments_response__get_packed_size
                     (const ListCommentsResponse   *message);
size_t list_comments_response__pack
                     (const ListCommentsResponse   *message,
                      uint8_t             *out);
size_t list_comments_response__pack_to_buffer
                     (const ListCommentsResponse   *message,
                      ProtobufCBuffer     *buffer);
ListCommentsResponse *
       list_comments_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   list_comments_response__free_unpacked
                     (ListCommentsResponse *message,
                      ProtobufCAllocator *allocator);
/* GetUserDetailsRequest methods */
void   get_user_details_request__init
                     (GetUserDetailsRequest         *message);
size_t get_user_details_request__get_packed_size
                     (const GetUserDetailsRequest   *message);
size_t get_user_details_request__pack
                     (const GetUserDetailsRequest   *message,
                      uint8_t             *out);
size_t get_user_details_request__pack_to_buffer
                     (const GetUserDetailsRequest   *message,
                      ProtobufCBuffer     *buffer);
GetUserDetailsRequest *
       get_user_details_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_user_details_request__free_unpacked
                     (GetUserDetailsRequest *message,
                      ProtobufCAllocator *allocator);
/* GetUserDetailsResponse methods */
void   get_user_details_response__init
                     (GetUserDetailsResponse         *message);
size_t get_user_details_response__get_packed_size
                     (const GetUserDetailsResponse   *message);
size_t get_user_details_response__pack
                     (const GetUserDetailsResponse   *message,
                      uint8_t             *out);
size_t get_user_details_response__pack_to_buffer
                     (const GetUserDetailsResponse   *message,
                      ProtobufCBuffer     *buffer);
GetUserDetailsResponse *
       get_user_details_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   get_user_details_response__free_unpacked
                     (GetUserDetailsResponse *message,
                      ProtobufCAllocator *allocator);
/* AddBeerRequest methods */
void   add_beer_request__init
                     (AddBeerRequest         *message);
size_t add_beer_request__get_packed_size
                     (const AddBeerRequest   *message);
size_t add_beer_request__pack
                     (const AddBeerRequest   *message,
                      uint8_t             *out);
size_t add_beer_request__pack_to_buffer
                     (const AddBeerRequest   *message,
                      ProtobufCBuffer     *buffer);
AddBeerRequest *
       add_beer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_beer_request__free_unpacked
                     (AddBeerRequest *message,
                      ProtobufCAllocator *allocator);
/* AddBeerResponse methods */
void   add_beer_response__init
                     (AddBeerResponse         *message);
size_t add_beer_response__get_packed_size
                     (const AddBeerResponse   *message);
size_t add_beer_response__pack
                     (const AddBeerResponse   *message,
                      uint8_t             *out);
size_t add_beer_response__pack_to_buffer
                     (const AddBeerResponse   *message,
                      ProtobufCBuffer     *buffer);
AddBeerResponse *
       add_beer_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_beer_response__free_unpacked
                     (AddBeerResponse *message,
                      ProtobufCAllocator *allocator);
/* ListBeersRequest methods */
void   list_beers_request__init
                     (ListBeersRequest         *message);
size_t list_beers_request__get_packed_size
                     (const ListBeersRequest   *message);
size_t list_beers_request__pack
                     (const ListBeersRequest   *message,
                      uint8_t             *out);
size_t list_beers_request__pack_to_buffer
                     (const ListBeersRequest   *message,
                      ProtobufCBuffer     *buffer);
ListBeersRequest *
       list_beers_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   list_beers_request__free_unpacked
                     (ListBeersRequest *message,
                      ProtobufCAllocator *allocator);
/* Beer methods */
void   beer__init
                     (Beer         *message);
size_t beer__get_packed_size
                     (const Beer   *message);
size_t beer__pack
                     (const Beer   *message,
                      uint8_t             *out);
size_t beer__pack_to_buffer
                     (const Beer   *message,
                      ProtobufCBuffer     *buffer);
Beer *
       beer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   beer__free_unpacked
                     (Beer *message,
                      ProtobufCAllocator *allocator);
/* ListBeersResponse methods */
void   list_beers_response__init
                     (ListBeersResponse         *message);
size_t list_beers_response__get_packed_size
                     (const ListBeersResponse   *message);
size_t list_beers_response__pack
                     (const ListBeersResponse   *message,
                      uint8_t             *out);
size_t list_beers_response__pack_to_buffer
                     (const ListBeersResponse   *message,
                      ProtobufCBuffer     *buffer);
ListBeersResponse *
       list_beers_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   list_beers_response__free_unpacked
                     (ListBeersResponse *message,
                      ProtobufCAllocator *allocator);
/* AddCommentRequest methods */
void   add_comment_request__init
                     (AddCommentRequest         *message);
size_t add_comment_request__get_packed_size
                     (const AddCommentRequest   *message);
size_t add_comment_request__pack
                     (const AddCommentRequest   *message,
                      uint8_t             *out);
size_t add_comment_request__pack_to_buffer
                     (const AddCommentRequest   *message,
                      ProtobufCBuffer     *buffer);
AddCommentRequest *
       add_comment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_comment_request__free_unpacked
                     (AddCommentRequest *message,
                      ProtobufCAllocator *allocator);
/* AddCommentResponse methods */
void   add_comment_response__init
                     (AddCommentResponse         *message);
size_t add_comment_response__get_packed_size
                     (const AddCommentResponse   *message);
size_t add_comment_response__pack
                     (const AddCommentResponse   *message,
                      uint8_t             *out);
size_t add_comment_response__pack_to_buffer
                     (const AddCommentResponse   *message,
                      ProtobufCBuffer     *buffer);
AddCommentResponse *
       add_comment_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_comment_response__free_unpacked
                     (AddCommentResponse *message,
                      ProtobufCAllocator *allocator);
/* DeleteCommentRequest methods */
void   delete_comment_request__init
                     (DeleteCommentRequest         *message);
size_t delete_comment_request__get_packed_size
                     (const DeleteCommentRequest   *message);
size_t delete_comment_request__pack
                     (const DeleteCommentRequest   *message,
                      uint8_t             *out);
size_t delete_comment_request__pack_to_buffer
                     (const DeleteCommentRequest   *message,
                      ProtobufCBuffer     *buffer);
DeleteCommentRequest *
       delete_comment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_comment_request__free_unpacked
                     (DeleteCommentRequest *message,
                      ProtobufCAllocator *allocator);
/* DeleteCommentResponse methods */
void   delete_comment_response__init
                     (DeleteCommentResponse         *message);
size_t delete_comment_response__get_packed_size
                     (const DeleteCommentResponse   *message);
size_t delete_comment_response__pack
                     (const DeleteCommentResponse   *message,
                      uint8_t             *out);
size_t delete_comment_response__pack_to_buffer
                     (const DeleteCommentResponse   *message,
                      ProtobufCBuffer     *buffer);
DeleteCommentResponse *
       delete_comment_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   delete_comment_response__free_unpacked
                     (DeleteCommentResponse *message,
                      ProtobufCAllocator *allocator);
/* Error methods */
void   error__init
                     (Error         *message);
size_t error__get_packed_size
                     (const Error   *message);
size_t error__pack
                     (const Error   *message,
                      uint8_t             *out);
size_t error__pack_to_buffer
                     (const Error   *message,
                      ProtobufCBuffer     *buffer);
Error *
       error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   error__free_unpacked
                     (Error *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Command_Closure)
                 (const Command *message,
                  void *closure_data);
typedef void (*RegisterResponse_Closure)
                 (const RegisterResponse *message,
                  void *closure_data);
typedef void (*RegisterRequest_Closure)
                 (const RegisterRequest *message,
                  void *closure_data);
typedef void (*LoginChallengeMsg1Request_Closure)
                 (const LoginChallengeMsg1Request *message,
                  void *closure_data);
typedef void (*LoginChallengeMsg1Response_Closure)
                 (const LoginChallengeMsg1Response *message,
                  void *closure_data);
typedef void (*LoginChallengeMsg2Request_Closure)
                 (const LoginChallengeMsg2Request *message,
                  void *closure_data);
typedef void (*LoginChallengeMsg2Response_Closure)
                 (const LoginChallengeMsg2Response *message,
                  void *closure_data);
typedef void (*ListCommentsRequest_Closure)
                 (const ListCommentsRequest *message,
                  void *closure_data);
typedef void (*Comment_Closure)
                 (const Comment *message,
                  void *closure_data);
typedef void (*ListCommentsResponse_Closure)
                 (const ListCommentsResponse *message,
                  void *closure_data);
typedef void (*GetUserDetailsRequest_Closure)
                 (const GetUserDetailsRequest *message,
                  void *closure_data);
typedef void (*GetUserDetailsResponse_Closure)
                 (const GetUserDetailsResponse *message,
                  void *closure_data);
typedef void (*AddBeerRequest_Closure)
                 (const AddBeerRequest *message,
                  void *closure_data);
typedef void (*AddBeerResponse_Closure)
                 (const AddBeerResponse *message,
                  void *closure_data);
typedef void (*ListBeersRequest_Closure)
                 (const ListBeersRequest *message,
                  void *closure_data);
typedef void (*Beer_Closure)
                 (const Beer *message,
                  void *closure_data);
typedef void (*ListBeersResponse_Closure)
                 (const ListBeersResponse *message,
                  void *closure_data);
typedef void (*AddCommentRequest_Closure)
                 (const AddCommentRequest *message,
                  void *closure_data);
typedef void (*AddCommentResponse_Closure)
                 (const AddCommentResponse *message,
                  void *closure_data);
typedef void (*DeleteCommentRequest_Closure)
                 (const DeleteCommentRequest *message,
                  void *closure_data);
typedef void (*DeleteCommentResponse_Closure)
                 (const DeleteCommentResponse *message,
                  void *closure_data);
typedef void (*Error_Closure)
                 (const Error *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor command__descriptor;
extern const ProtobufCMessageDescriptor register_response__descriptor;
extern const ProtobufCMessageDescriptor register_request__descriptor;
extern const ProtobufCMessageDescriptor login_challenge_msg1_request__descriptor;
extern const ProtobufCMessageDescriptor login_challenge_msg1_response__descriptor;
extern const ProtobufCMessageDescriptor login_challenge_msg2_request__descriptor;
extern const ProtobufCMessageDescriptor login_challenge_msg2_response__descriptor;
extern const ProtobufCMessageDescriptor list_comments_request__descriptor;
extern const ProtobufCMessageDescriptor comment__descriptor;
extern const ProtobufCMessageDescriptor list_comments_response__descriptor;
extern const ProtobufCMessageDescriptor get_user_details_request__descriptor;
extern const ProtobufCMessageDescriptor get_user_details_response__descriptor;
extern const ProtobufCMessageDescriptor add_beer_request__descriptor;
extern const ProtobufCMessageDescriptor add_beer_response__descriptor;
extern const ProtobufCMessageDescriptor list_beers_request__descriptor;
extern const ProtobufCMessageDescriptor beer__descriptor;
extern const ProtobufCMessageDescriptor list_beers_response__descriptor;
extern const ProtobufCMessageDescriptor add_comment_request__descriptor;
extern const ProtobufCMessageDescriptor add_comment_response__descriptor;
extern const ProtobufCMessageDescriptor delete_comment_request__descriptor;
extern const ProtobufCMessageDescriptor delete_comment_response__descriptor;
extern const ProtobufCMessageDescriptor error__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pr_2eproto__INCLUDED */
